parsePEG.names=['','RuleSet','Rule','PropSpec','UPlusCodePoint','PositiveSpec','NegativeSpec','CodePoint','CodePointLit','CodePointFrom','CodePointTo','CodePointRange','UnicodePropSpec','CodePointExpr','CharSetUnion','HEXDIG','CharSetDifference','CharEscape','CharSetExpr','StrLit','CharSet','PosCharSet','NegCharSet','Epsilon','AtomicExpr','ParenthExpr','Replicand','N','M','Optional','MNRep','PosRep','AnyRep','SeqUnit','Sequence','IdentChar','IdentStartChar','OrdChoice','S','SpaceAtom','LB','NonTerminal','Comment','PosLookahead','NegLookahead','_']
function parsePEG(out){var eof=false,s='',l=0,S=184320,T,M,F,D,R,tbl=[],x,pos=0,offset=0,buf=[],bufs=[],states=[],posns=[],c,equiv,ds,dp,failed=0,emp=0,emps=[];
equiv=rle_dec([10,0,1,1,2,0,1,2,18,0,1,3,1,4,1,5,3,0,1,6,1,0,1,7,1,8,1,9,1,10,1,11,1,12,1,0,1,13,10,14,1,15,1,16,1,17,2,0,1,18,1,0,6,19,14,20,1,21,5,20,1,22,1,23,1,24,1,25,1,26,1,0,2,26,1,27,1,26,1,28,1,29,7,26,1,29,1,26,1,30,1,26,1,29,1,26,1,31,1,26,1,29,1,26,1,32,2,26,1,33,1,0,1,34,34,0,1,35,852,0,1,36,4746,0,1,35,397,0,1,35,2033,0,11,35,36,0,1,35,47,0,1,35,304,0,1,37,129,0,1,38,3565,0,1,35,43007,0,2048,39,8192,0])
function rle_dec(a){var r=[],i,l,n,x,ll;for(i=0,l=a.length;i<l;i+=2){n=a[i];x=a[i+1];r.length=ll=r.length+n;for(;n;n--)r[ll-n]=x}return r}
T=[,188416,299008,949254,818182,965638,916486,765952,780806,892928,897024,880640,901120,749568,720896,,659456,1052672,643072,1028096,589824,991232,605190,,569344,1114112,557056,1171456,1163264,1187840,1126400,1204224,548864,512000,465926,,,356352,429062,442368,278528,335872,266240,1196032,1179648,1212416,195590,196608,200704,166919,208896,175279,11439,224262,228358,229376,166919,237568,166919,245760,175279,11439,258048,166919,301,,274432,,285702,,,,,171183,158727,311296,,,,,158727,154799,150535,344064,146439,,,360448,158727,301,142511,376832,158727,301,392198,393216,,401408,158727,301,142511,417792,158727,301,430080,162823,438272,162823,446464,,454656,166919,,470022,471040,138415,479232,158727,301,494598,495616,138415,503808,158727,301,516096,134319,130223,126127,122031,105647,179375,183471,101551,109743,,561152,105647,101551,573440,97455,85167,171183,81071,593920,93359,89263,,,,618496,158727,301,630784,76975,301,,68783,651264,158727,301,60591,670726,671744,158727,679936,,,,,,,,,158727,60591,56495,732166,733184,737280,158727,301,56495,753664,52399,48303,31919,770048,19631,36015,785414,,,,,,,,,,,,831488,64519,64519,64519,64519,855046,856064,64519,864256,64519,301,301,,40111,,44207,31919,31919,905216,23727,27823,,,,,15535,,,,950272,,958464,,,,,15535,,,,,999424,158727,301,1011712,76975,301,,,,1036288,1040384,72879,,,1059846,1060864,,1069056,64519,64519,64519,64519,301,,,,,,,,154799,,109743,,117935,1145862,1146880,,113839,301,,1167360,,1175552,,,138415,109743,,,138415,109743,,7343,1220608,]
M=rle_dec([1,,47,299,1,204800,1,200704,1,217088,2,299,1,253952,1,224262,1,241664,1,233472,1,299,1,237568,4,299,1,258048,1,299,1,270336,1,299,1,274432,2,299,2,,1,299,1,303104,1,307200,1,327680,2,299,2,,1,331776,1,299,1,339968,1,299,1,344064,2,,1,368640,2,299,1,372736,1,385024,3,299,1,392198,1,397312,1,409600,2,299,1,413696,4,299,1,434176,1,299,1,438272,3,299,1,458752,2,299,1,487424,1,475136,4,299,1,494598,1,499712,12,299,1,552960,12,299,1,614400,2,,1,626688,2,299,1,638976,3,299,1,647168,3,299,1,663552,1,299,1,670726,1,675840,1,712704,2,299,6,,1,716800,1,299,1,724992,1,299,1,732166,1,745472,10,299,1,811008,1,300,6,,1,299,1,830470,2,,1,299,1,835584,1,839680,1,843776,1,847872,2,299,1,860160,4,299,1,,1,884736,1,888832,6,299,1,929792,3,,1,936966,1,299,2,,1,299,1,954368,1,299,1,958464,1,974848,2,,1,982022,1,299,2,,1,995328,1,1007616,2,299,1,1019904,3,299,1,,1,1032192,1,1048576,1,1036288,5,299,1,1068038,1,299,1,1073152,1,1077248,1,1081344,1,1085440,2,299,2,,1,299,2,,1,1118208,1,1122304,1,299,1,1130496,1,1134592,1,1138688,1,1159168,1,299,1,1150976,4,299,1,1167360,1,299,1,1175552,1,1183744,1,299,1,1191936,1,299,1,1200128,1,299,1,1208320,1,299,1,1216512,1,299,1,300])
F=rle_dec([1,,46,300,1,262144,1,300,1,299,1,300,1,212992,2,300,1,299,3,300,1,299,1,300,1,249856,2,300,1,299,3,300,1,299,1,300,1,294912,2,,4,300,1,318470,1,300,2,,4,300,1,299,2,,1,300,1,364544,3,300,1,380928,2,300,1,299,2,300,1,405504,3,300,1,421888,4,300,1,299,1,300,1,453638,7,300,1,483328,2,300,1,299,2,300,1,507904,2,300,1,520192,1,524288,1,528384,1,532480,1,536576,1,540672,1,544768,4,300,1,565248,2,300,1,577536,1,581632,1,585728,2,300,1,598016,2,300,2,,1,300,1,622592,2,300,1,634880,4,300,1,655360,3,300,1,299,2,300,1,687110,1,300,6,,4,300,1,299,1,300,1,741376,3,300,1,757760,1,761856,2,300,1,774144,2,300,1,299,6,,2,300,2,,6,300,1,872448,2,300,1,868352,2,300,1,,6,300,1,909312,2,300,3,,2,300,2,,3,300,1,299,1,300,2,,2,300,2,,2,300,1,1003520,2,300,1,1015808,2,300,1,,2,300,1,299,1,1044480,3,300,1,1092614,7,300,1,1104902,2,,1,300,2,,7,300,1,1155072,5,300,1,299,1,300,1,299,10,300,1,299])
D=function(a,i,l,b){for(i=0,l=a.length,b=[];i<l;i++)b[i]=a[i]&&revive(a[i]);return b}([,,,,,,,,,,,,,,,[[[[14,19]]]],,,,,,,,[[[[36]]]],,,,,,,,,,,,[[[[14,19,20,21,26,27,28,29,30,31,32]]]],[[[[19,20,21]]]],,,,,,,,,,,,,,,,,,,,,,,,,,,,,[[[[16]]]],,[[[[0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]]]],,[[[[2]]],[[[1]]]],,,[[[[1,2]]]],,,,[[[[37]]]],[[[[17]]],[[[12]]]],,,,,,,,,,,,,,,,,,,[[[[13]]]],,,,,,,,,,,,,[[[[3]]]],,,[[[[3]]]],,,,,,,,,,,,,,,,,,,,,,,[[[[9]]]],,,,,,,,,,,,[[[[22]]],[[[25]]]],,,,,,,,,[[[[24]]]],,,,,,,,,,[[[[38]]]],[[[[28]]],[[[32]]],[[[27]]],[[[28]]],[[[30]]],[[[31]]]],,,,,,,,,,,,,,,,,,,,,,,,[[[[28]]],[[[32]]],[[[27]]],[[[28]]],[[[30]]],[[[31]]]],,,,,,,[[[[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,36,37]]]],[[[[21]]],[[[10]]]],,,,,,,,,,,,,,,,,[[[[12]]]],,,,,,,[[[[22]]],[[[15]]],[[[25]]]],,,,,[[[[15]]],[[[24]]]],,,,[[[[3,12,19,20,21,26,27,28,29,30,31,32]]]],,[[[[3,12,19,20,21,26,27,28,29,30,31,32]]]],[[[[22]]],[[[15]]]],,,,[[[[15]]],[[[24]]]],,,[[[[22]]]],,,,,,,[[[[24]]]],,[[[[5]]]],,,,[[[[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]]]],[[[[5]]]],,,[[[[23]]]],,,,,,,[[[[23]]],[[[29,31]]]],,,[[[[23]]],[[[5]]]],,,[[[[7]]]],,[[[[8]]]],,[[[[33]]]],,,,[[[[11]]]],,,[[[[34]]]],,[[[[14]]]],,[[[[14]]]],[[[[4]]]],,,[[[[18]]]],[[[[6]]]],,,[[[[10]]]],,,[[[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]]]]])
function revive(x){var i,l,state,j,l2,all=[],t,ts;if(!x)return;for(i=0,l=x.length;i<l;i++){state=x[i];ts=[];for(j=0,l2=state.length;j<l2;j++){t=state[j];if(t[1]==l) ts.push([t[0],true]);else ts.push([t[0],t[1]==undefined?i+1:t[1]])}all.push(ts)}return dfa(all)
 function dfa(ss){var i,l_ss,st,l_s,t,l_t,a,d=[],j,k,l;for(i=0,l_ss=ss.length;i<l_ss;i++){st=ss[i];a=[];for(j=0,l_s=st.length;j<l_s;j++){t=st[j];for(k=0,l_t=t[0].length;k<l_t;k++){a[t[0][k]]=t[1]===true?l_ss:t[1]}}for(j=0,l=a.length;j<l;j++)if(a[j]==undefined)a[j]=l_ss+1;d[i]=a}
  return function _dfa(st,i){var eq,pr;while(st<l_ss){eq=equiv[s.charCodeAt(i++)];st=d[pr=st][eq]}if(eq==undefined&&i>=s.length){ds=pr;dp=i-1;return}ds=0;dp=undefined;if(st==l_ss){pos=i;return true}return false}}}
if(typeof out=='string'){s=out;out=[];x=parsePEG(function(m,x,y){if(m=='fail')out=[false,x,y,s];if(m=='tree segment')out=out.concat(x)});x('chunk',s);x('eof');return out[0]===false?out:[true,{names:parsePEG.names,tree:out,input:s}]}
return function(m,x){if(failed){out('fail',pos,'parse already failed');return}
switch(m){
case 'chunk':s+=x;l=s.length;while(tbl.length<l+1)tbl.push([]);mainloop();break
case 'eof':eof=true;mainloop();break
default:throw new Error('unhandled message: '+m)}}
//mainloop
function mainloop(){for(;;){
if(dp==undefined&&(S>328||S<301))
t_block:{
if(S&4/*pushpos*/)posns.push(pos)
if(S&2/*t_bufferout*/){bufs.push(buf);buf=[]}
if(S&8/*t_emitstate*/){emps.push(emp);emp=pos;buf.push(S>>>12)}
if(S&1/*cache*/&&(x=tbl[pos-offset][S])!=undefined){if(x){R=true;pos=x[0];buf=x[1];if(emp<x[2])emp=x[2]}else{R=false}}
}
if(R==undefined){
if(D[S>>>12]){R=D[S>>>12](ds||0,dp||pos);if(R==undefined){if(eof){dp=undefined;R=false}else{out('ready');return}}}
else{states.push(S);S=T[S>>>12]}
if(S==301){R=true;S=states.pop()}}
while(R!=undefined){
if(S==184320){(R?emit:fail)();return}if(R){
if(S&1/*cache*/){tbl[posns[posns.length-1]][S]=[pos,buf,emp];buf=buf.slice()}
if(S&8/*t_emitstate*/){if(pos!=emp&&emp!=posns[posns.length-1]){buf.push(-1,pos-emp)}emp=emps.pop();if(emp!=posns[posns.length-1]){buf=[-1,posns[posns.length-1]-emp].concat(buf)}}
if(S&16/*m_emitstate*/)buf.push(S>>>12)
if(S&32/*m_emitclose*/)buf.push(-2)
if(S&128/*m_emitlength*/)buf.push(pos-posns[posns.length-1])
if(S&8/*t_emitstate*/){emp=pos}
if(S&256/*m_resetpos*/)pos=posns[posns.length-1]
if(S&4/*pushpos*/)posns.pop()
if(S&512/*m_tossbuf*/)buf=bufs.pop()
if(S&1024/*m_emitbuf*/){buf=bufs.pop().concat(buf);}
if(!bufs.length&&buf.length>64)emit()
S=M[S>>>12]}
else{
if(S&1/*cache*/)tbl[posns[posns.length-1]][S]=false
if(S&4/*pushpos*/)pos=posns.pop()
if(S&2048/*f_tossbuf*/)buf=bufs.pop()
if(S&8/*t_emitstate*/){emp=emps.pop()}
if(emp>pos){emp=pos}
S=F[S>>>12]}
if(S==299){R=true;S=states.pop()}else if(S==300){R=false;S=states.pop()}else R=undefined;}}}
function emit(){var x=bufs.length?bufs[0]:buf;if(x.length){out('tree segment',x);if(bufs.length)bufs[0]=[];else buf=[]}}
function fail(s){out('fail',pos,s);failed=1}}
